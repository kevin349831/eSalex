@model WebApplication2.Models.Order

@{
    ViewBag.Title = "InsertOrder";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>新增訂單</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <table class="table table-bordered">
        <tr>
            <td>
                @Html.LabelFor(model => model.CustomerID)
            </td>
            <td colspan="3">
                @Html.DropDownListFor(model => model.CustomerID, (List<SelectListItem>)ViewBag.CustCodeData)
                @Html.ValidationMessageFor(model => model.CustomerID)
            </td>
        </tr>

        <tr>
            <td>@Html.LabelFor(model => model.EmployeeID)</td>
            <td>
                @Html.DropDownListFor(model => model.EmployeeID, (List<SelectListItem>)ViewBag.EmpCodeData)
                @Html.ValidationMessageFor(model => model.EmployeeID)
            </td>
        </tr>

        <tr>
            <td>@Html.LabelFor(model => model.Orderdate)</td>
            <td>
                @Html.TextBoxFor(model => model.Orderdate, new { @type = "date" })
                @Html.ValidationMessageFor(model => model.Orderdate)
            </td>
            <td>@Html.LabelFor(model => model.RequireDdate)</td>
            <td>
                @Html.TextBoxFor(model => model.RequireDdate, new { @type = "date" })
                @Html.ValidationMessageFor(model => model.RequireDdate)
            </td>
        </tr>



        <tr>
            <td>@Html.LabelFor(model => model.ShippedDate)</td>
            <td>
                @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date" })
                @Html.ValidationMessageFor(model => model.ShippedDate)
            </td>
            <td>@Html.LabelFor(model => model.ShipperId)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipperId)
                @Html.ValidationMessageFor(model => model.ShipperId)
            </td>
        </tr>


        <tr>
            <td>@Html.LabelFor(model => model.ShipperName)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipperName)
                @Html.ValidationMessageFor(model => model.ShipperName)
            </td>
            <td>@Html.LabelFor(model => model.Freight)</td>
            <td>
                @Html.TextBoxFor(model => model.Freight)
                @Html.ValidationMessageFor(model => model.Freight)
            </td>
        </tr>

        <tr>
            <td>@Html.LabelFor(model => model.ShipCountry)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipCountry)
                @Html.ValidationMessageFor(model => model.ShipCountry)
            </td>
            <td>@Html.LabelFor(model => model.ShipCity)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipCity)
                @Html.ValidationMessageFor(model => model.ShipCity)
            </td>
        </tr>

        <tr>
            <td>@Html.LabelFor(model => model.ShipRegion)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipRegion)
                @Html.ValidationMessageFor(model => model.ShipRegion)
            </td>
            <td>@Html.LabelFor(model => model.ShipPostalCode)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipPostalCode)
                @Html.ValidationMessageFor(model => model.ShipPostalCode)
            </td>
        </tr>

        <tr>
            <td>@Html.LabelFor(model => model.ShipAddress)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipAddress)
                @Html.ValidationMessageFor(model => model.ShipAddress)
            </td>
            <td>@Html.LabelFor(model => model.ShipName)</td>
            <td>
                @Html.TextBoxFor(model => model.ShipName)
                @Html.ValidationMessageFor(model => model.ShipName)
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <input type="submit" value="存檔" />
                @Html.ActionLink("回前一頁", "Index")
            </td>
            <td></td>
            <td></td>
        </tr>
    </table>

    <a id="addNewDetial" href="#">新增一筆</a>
    <table class="table table-bordered">
        <tr>
            <td>商品</td>
            <td>單價</td>
            <td>數量</td>
            <td>小計</td>
            <td></td>
        </tr>
        <tbody id="tbContent">

            @for (int i = 0; i < Model.OrderDetails.Count; i++)
            {
                <tr>
                    <td>@Html.DropDownListFor(m => Model.OrderDetails[i].ProductId, (List<SelectListItem>)ViewBag.ProductCodeData, new { @class = "ProductId" })</td>
                    <td>@Html.TextBoxFor(m => Model.OrderDetails[i].UnitPrice, new { @class = "UnitPrice" })</td>
                    <td>@Html.TextBoxFor(m => Model.OrderDetails[i].Qty, new { @class = "Qty" })</td>
                    <td></td>
                    <td><button type="button" class="btnRemove">取消</button></td>
                </tr>
            }
        </tbody>
    </table>

}
@section scripts{
    <script type="text/javascript">
        //明細資料範本
        var trtemplate = $('#tbContent tr').eq(0).html();

        //新增一列名資料
        $("#addNewDetial").click(function (e) {
            $('#tbContent').append('<tr>' + trtemplate + '</tr>');
        });

        //移除TR
        $('#tbContent').on('click', '.btnRemove', function () {
            if ($('#tbContent tr').length > 1)
                $(this).closest('tr').remove();
        });

        //表單送出前置換element name 讓Action 可以讀到OrderDetials
        $('form').submit(function () {
            for (var i = 0 ; i < $('#tbContent tr').length; i++) {
                $('.ProductId').eq(i).attr('name', 'OrderDetails[' + i + '].ProductId');
                $('.Qty').eq(i).attr('name', 'OrderDetails[' + i + '].Qty');
                $('.UnitPrice').eq(i).attr('name', 'OrderDetails[' + i + '].UnitPrice');
            }
        });
    </script>
}
